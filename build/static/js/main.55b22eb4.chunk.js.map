{"version":3,"sources":["firebase.js","actions/user.js","reducers/match.js","reducers/index.js","reducers/user.js","actions/match.js","reducers/matches.js","actions/matches.js","components/Auth/SignUp.jsx","components/Auth/Login.jsx","components/Profile.jsx","components/game/Lobby.jsx","components/game/InGame.jsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","geo","geofirex","GET_USER","GET_USER_INFO","combineReducers","user","state","type","payload","UID","match","id","inGame","matches","Object","values","SignUp","username","email","password","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","dispatch","data","createUserWithEmailAndPassword","then","collection","doc","uid","set","console","log","catch","error","createAccount","this","authed","to","Box","align","pad","border","color","size","elevation","round","Form","style","margin","onSubmit","FormField","TextInput","placeholder","onChange","required","direction","justify","top","Button","primary","label","Component","connect","Login","signInWithEmailAndPassword","Profile","userId","get","exists","as","Link","Lobby","redirect","matchId","getMatches","onSnapshot","snapshot","forEach","players","ref","querySnap","snap","push","admin","createMatch","add","docRef","joinMatch","joined","handleInput","gap","width","map","game","key","marginTop","length","onClick","InGame","boundary","lat","lng","position","zoom","initialising","userLocationFound","getPlayers","querySnapshot","pos","geopoint","latitude","longitude","L","circle","fillColor","fillOpacity","radius","addTo","bindPopup","openPopup","setView","getMatch","playing","initMap","maxZoomLevel","maxNativeZoom","zoomControl","fitWorld","tileLayer","detectRetina","attribution","gotUserLocation","on","point","latlng","update","locate","maxZoom","watch","playGame","handleSonar","setDoc","alert","height","padding","App","Grommet","theme","grommet","path","exact","component","render","routeProps","params","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","document","addEventListener","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55b22eb4.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport * as geofirex from 'geofirex'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCUu8zzfotKZNvfQcXRQm2LMX7xwMRCyRg\",\n  authDomain: \"sonar-2664d.firebaseapp.com\",\n  databaseURL: \"https://sonar-2664d.firebaseio.com\",\n  projectId: \"sonar-2664d\",\n  storageBucket: \"sonar-2664d.appspot.com\",\n  messagingSenderId: \"85025589952\",\n  appId: \"1:85025589952:web:772471903454f716\"\n}\nfirebase.initializeApp(firebaseConfig)\n\nexport const auth = firebase.auth()\nexport const db = firebase.firestore()\nexport const geo = geofirex.init(firebase)\n","import { auth, db } from \"../firebase\";\n\nexport const GET_USER = 'GET_USER'\nexport const GET_USER_INFO = 'GET_USER_INFO'\n\nexport function getUser(userId) {\n  return dispatch => {\n    const docRef = db.collection(\"users\").doc(userId)\n\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        dispatch({\n          type: GET_USER_INFO,\n          payload: doc.data()\n        })\n      } else {\n        console.log(\"user not found\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting user:\", error);\n    })\n  }\n}\n\nexport function createAccount(data) {\n  const { username, email, password } = data\n\n  return dispatch => auth.createUserWithEmailAndPassword(email, password)\n    .then(({ user }) => {\n      if (user !== null) {\n        db.collection('users').doc(user.uid).set({username}) \n          .then(function () { \n            console.log(\"user account created\");\n          })\n          .catch(function (error) {\n            console.error(\"Error creating account: \", error);\n          })\n      }\n      return user\n    }).then((user) => {\n      dispatch({\n        type: GET_USER,\n        payload: user.uid\n      })\n    }).catch((error) => console.log(error))\n}\n\nexport function loginUser(data) {\n  return dispatch => auth.signInWithEmailAndPassword(data.email, data.password)\n    .then(({ user }) => {\n      dispatch({\n        type: GET_USER,\n        payload: user.uid\n      })\n    }).catch((error) => console.log(error))\n}","import { CREATED_MATCH, JOINED_MATCH, GET_MATCH, PLAY_GAME } from '../actions/match'\n\nconst initialState = false\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case CREATED_MATCH:\n      return { ...state, id: payload }\n\n    case JOINED_MATCH:\n      return { ...state, id: payload }\n\n    case GET_MATCH:\n      return { ...state, ...payload }\n\n    case PLAY_GAME:\n      return { ...state, inGame: true }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport user from './user'\nimport match from './match'\nimport matches from './matches'\n\nexport default combineReducers({\n  user,\n  match,\n  matches\n})","import { GET_USER, GET_USER_INFO } from '../actions/user'\n\nconst initialState = null\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_USER:\n      return { UID: payload, ...state  }\n    case GET_USER_INFO:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n","import { db } from \"../firebase\"\n\nexport const CREATED_MATCH = 'CREATED_MATCH'\nexport const JOINED_MATCH = 'JOINED_MATCH'\nexport const GET_MATCH = 'GET_MATCH'\nexport const PLAY_GAME = 'PLAY_GAME'\n\nexport function playGame(id) {\n  return dispatch => {\n    db.ref('/matches/' + id)\n      .update({ inGame: true })\n      .catch(err => console.log(err.message))\n  }\n}\n\n","import { GET_MATCHES, GOT_NO_MATCHES } from '../actions/matches'\n\nconst initialState = null\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case GET_MATCHES:\n      return payload ? Object.values(payload) : null\n    \n    case GOT_NO_MATCHES:\n      return null\n\n    default:\n      return state\n  }\n}\n","\n\nexport const GET_MATCHES = 'GET_MATCHES'\nexport const GOT_NO_MATCHES = 'GOT_NO_MATCHES'","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from \"react-router-dom\"\nimport { Box, FormField, TextInput, Form, Button } from \"grommet\"\nimport { createAccount } from '../../actions/user';\n\nclass SignUp extends Component {\n\n  state = {\n    username: '',\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.dispatch(createAccount(this.state))\n  }\n\n  render() {\n    const { email, password, username } = this.state\n    if (this.props.authed !== null) {\n      return <Redirect to='/profile' />\n    } else {\n      return (\n        <Box\n          align=\"center\"\n          pad=\"large\"\n        >\n          <h2>\n            Welcome to sonar\n        </h2>\n          <Box\n            pad=\"medium\"\n            border={{ color: 'brand', size: 'large' }}\n            elevation=\"medium\"\n            round=\"large\"\n          >\n            <Form\n              style={{ margin: '1.5em 1.5em 0 1.5em ' }}\n              onSubmit={this.handleSubmit}\n            >\n              <FormField >\n                <TextInput\n                  placeholder=\"email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  value={email}\n                />\n              </FormField>\n              <FormField required={true}>\n                <TextInput\n                  placeholder=\"user name\"\n                  name=\"username\"\n                  value={username}\n                  onChange={this.handleChange}\n                />\n              </FormField>\n              <FormField >\n                <TextInput\n                  placeholder=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  value={password}\n                />\n              </FormField>\n              <Box direction=\"row\" justify=\"center\" margin={{ top: \"large\" }}>\n                <Button type=\"submit\" primary label=\"Sign up\" />\n              </Box>\n            </Form>\n            <Box direction=\"row\" justify=\"center\">\n              <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\n            </Box>\n          </Box>\n        </Box>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  authed: user\n})\n\nexport default connect(mapStateToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from \"react-router-dom\"\nimport { Box, FormField, TextInput, Form, Button } from \"grommet\"\nimport { loginUser } from '../../actions/user'\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.dispatch(loginUser(this.state))\n  }\n\n  render() {\n    const { email, password } = this.state\n    if (this.props.user !== null) {\n      return <Redirect to='/profile' />\n    } else {\n      return (\n        <Box\n          align=\"center\"\n          pad=\"large\"\n        >\n          <h2>\n            Welcome to sonar\n        </h2>\n          <Box\n            pad=\"medium\"\n            border={{ color: 'brand', size: 'large' }}\n            elevation=\"medium\"\n            round=\"large\"\n          >\n            <Form\n              style={{ margin: '1.5em 1.5em 0 1.5em ' }}\n              onSubmit={this.handleSubmit}\n            >\n              <FormField >\n                <TextInput\n                  placeholder=\"email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  value={email}\n                />\n              </FormField>\n              <FormField >\n                <TextInput\n                  placeholder=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  value={password}\n                />\n              </FormField>\n              <Box direction=\"row\" justify=\"center\" margin={{ top: \"large\" }}>\n                <Button type=\"submit\" primary label=\"Login\" />\n              </Box>\n            </Form>\n            <Box direction=\"row\" justify=\"center\">\n              <p>Dont have an account yet? <Link to=\"/SignUp\">Sign Up here</Link></p>\n            </Box>\n          </Box>\n        </Box>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(Login)\n","import React, { Component } from 'react'\nimport { Box, Button } from 'grommet';\nimport { connect } from 'react-redux'\nimport { getUser } from '../actions/user'\nimport { Link } from 'react-router-dom';\n\nclass Profile extends Component {\n  state = {}\n\n  componentDidMount() {\n    this.props.dispatch(getUser(this.props.user.UID))\n  }\n\n  render() {\n    const { username } = this.props.user\n    return (\n      <Box align=\"center\">\n        <Box>\n          <h3> {username} </h3>\n        </Box>\n        <Button as={Link} to=\"/lobby\" primary label=\"play\" /> \n      </Box>\n    )\n  }\n}\nconst mapStateToProps = ({ user }) => ({\n  user\n})\n\nexport default connect(mapStateToProps)(Profile)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Box, Form, FormField, Button } from 'grommet'\nimport { Redirect } from 'react-router-dom'\nimport { db } from '../../firebase';\n\nclass Lobby extends Component {\n  state = {\n    name: '',\n    password: '',\n    redirect: false,\n    matches: [],\n    matchId: false\n  }\n\n  componentDidMount() {\n    if (this.props.user.UID) {\n      this.getMatches(this.props.user.UID)\n    }\n  }\n\n  componentWillUnmount () {\n    // cancel get matches \n  }\n\n  getMatches = (userId) => {\n    db.collection('matches').onSnapshot(snapshot => {\n      const matches = []\n      snapshot.forEach(doc => {\n        const players = []\n        doc.ref.collection('players').get().then((querySnap) => {\n          querySnap.forEach((snap) => {\n            // check if user has already joined a match\n            if (snap.data().id === userId) {\n              this.setState({ matchId: doc.ref.id })\n            }\n            players.push(snap.data())\n          })\n        })\n        matches.push({ matchId: doc.ref.id, admin: doc.data().admin, players })\n      })\n      this.setState({ matches })\n    })\n  }\n\n  createMatch = (userId, username) => {\n    db.collection('matches').add({\n      admin: { id: userId, name: username },\n      name: this.state.name,\n      password: this.state.password\n    })\n      .then((docRef) => {\n        db.collection('matches').doc(docRef.id).collection('players')\n          .add({ id: userId, name: username })\n          .then(() => this.setState({ matchId: docRef.id }))\n          .catch(e => console.log(`Error adding ${username} to match. ${e}`))\n      })\n      .catch((e) => console.error(`Error setting ${username} as admin of match. ${e}`))\n  }\n\n  joinMatch = (matchId, userId, username) => {\n    db.collection('matches').doc(matchId).collection('players')\n      .add({ id: userId, name: username })\n      .then(() => this.setState({ joined: true }))\n      .catch(e => console.log(`Error joining match. ${e}`))\n  }\n\n  handleInput = e => this.setState({ [e.target.name]: e.target.value })\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.createMatch(this.props.user.UID, this.props.user.username)\n  }\n\n  render() {\n    const { user: { UID, username } } = this.props\n    const { matches, matchId } = this.state\n\n    if (matchId) {\n      return <Redirect to={`game/${matchId}`} />\n    } else {\n      return (\n        <Box\n          direction=\"column\"\n          justify=\"center\"\n          align=\"center\"\n          pad=\"xlarge\"\n          gap=\"large\"\n        >\n          <h1>Create a game</h1>\n          <Box\n            pad=\"medium\"\n            border={{ color: 'brand', size: 'large' }}\n            elevation=\"medium\"\n            round=\"large\"\n            width=\"medium\"\n            align=\"center\"\n          >\n            <Form\n              style={{ margin: '1.5em 1.5em 0 1.5em ' }}\n              onSubmit={this.handleSubmit}\n            >\n              <FormField name=\"name\" label=\"Match name\" onChange={this.handleInput} />\n              <FormField type=\"password\" name=\"password\" label=\"password\" onChange={this.handleInput} />\n              <Button type=\"submit\" primary label=\"Create game\" />\n            </Form>\n          </Box>\n          <Box width=\"medium\" align=\"center\" >\n            <h1>Join a game</h1>\n            {\n              matches && matches.map(game => {\n                return <Box\n                  key={game.matchId}\n                  pad=\"small\"\n                  border={{ color: 'primary', size: 'large' }}\n                  elevation=\"small\"\n                  round=\"large\"\n                  width=\"medium\"\n                  align=\"center\"\n                  direction=\"row-responsive\"\n                  style={{ marginTop: '1.5em' }}\n                >\n                  <h3 style={{ margin: \"auto\" }}>\n                    {game.name} <br />\n                    {\"created by \" + game.admin.name} <br />\n                    {game.players.length + \" players joined\"}\n                  </h3>\n                  <Button onClick={() => this.joinMatch(game.matchId, UID, username)} primary label=\"Join\" />\n                </Box>\n              })\n            }\n          </Box>\n        </Box>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  user\n})\n\nexport default connect(mapStateToProps)(Lobby)","/*\nTODO:\n- [x] watch all players live location\n- [x] check if admin\n- [] admin starts game\n*/\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Box, Button } from 'grommet'\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport { db, geo } from '../../firebase'\n\nlet map = null\nlet playersRefUnsubscribe = null\n\nclass InGame extends Component {\n  state = {\n    boundary: {\n      lat: -39.637652, // mayfair primary location\n      lng: 176.860973,\n    },\n    position: null,\n    zoom: 18,\n    admin: false,\n    initialising: false,\n    players: null,\n    userLocationFound: false\n  }\n\n  componentDidMount() {\n    if (this.props) {\n      this.initMap()\n      geo.collection(this.props.matchId).setDoc(this.props.user.UID, { // add player to db \n        name: this.props.user.username,\n      })\n        .then(() => {\n          this.getMatch() // toggle play btn\n        })\n        .catch((e) => alert(`Error adding player to db`, e))\n    }\n  }\n\n  getPlayers = () => {\n    playersRefUnsubscribe = db.collection(this.props.matchId).onSnapshot((querySnapshot) => {\n      let players = []\n      querySnapshot.forEach(doc => { // watch every players position\n        players.push(doc.data())\n        const pos = [doc.data().position.geopoint.latitude, doc.data().position.geopoint.longitude]\n        let playerMarker = L.circle(pos, {\n          color: 'red',\n          fillColor: '#f03',\n          fillOpacity: 0.5,\n          radius: 10\n        }).addTo(map)\n          .bindPopup(doc.data().name).openPopup()\n\n        if (doc.ref.id === this.props.user.UID) { // check if player is this user\n          playerMarker = L.circle(pos, { // set player marker to black \n            color: 'black',\n            fillColor: '#f03',\n            fillOpacity: 0.5,\n            radius: 10\n          }).addTo(map)\n            .bindPopup(doc.data().name).openPopup()\n\n          map.setView(pos, 19) // watch this user's position on map\n        }\n      })\n      this.setState({ players })\n    })\n  }\n\n  getMatch = () => {\n    db.collection('matches').doc(this.props.matchId)\n      .onSnapshot((doc) => {\n        if (doc.data().admin.id === this.props.user.UID) { // check if user is admin\n          this.setState({ admin: doc.data().admin })\n        }\n        if (doc.data().initialising) { // check if game is initialising\n          this.setState({ initialising: true })\n        }\n        if (doc.data().playing) { // check if game is in play\n          this.setState({ playing: true })\n        }\n      })\n  }\n\n  initMap = () => {\n    map = L.map('map', {\n      zoom: 22,\n      maxZoomLevel: 22,\n      maxNativeZoom: 22,\n      zoomControl: true\n    })\n      .fitWorld()\n      .setView([this.state.boundary.lat, this.state.boundary.lng], 19)\n\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      detectRetina: true,\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map)\n\n    const boundary = L.circle([this.state.boundary.lat, this.state.boundary.lng], {\n      color: 'blue',\n      fillColor: '#f03',\n      fillOpacity: 0.5,\n      radius: 200\n    }).addTo(map)\n\n    let gotUserLocation = false\n\n    map.on('locationfound', ((e) => {\n      const point = geo.point(e.latlng.lat, e.latlng.lng)\n      db.collection(this.props.matchId).doc(this.props.user.UID).update({ // update users location in DB\n        position: point.data\n      }).then(() => {\n        if (gotUserLocation === false) { // only run this.getPlayers once. it has a realtime listener on it\n          this.getPlayers() // gets players from db\n          gotUserLocation = true\n        }\n      })\n    }))\n\n    // map.findAccuratePosition({\n    //   maxWait: 15000, // defaults to 10000\n    //   desiredAccuracy: 30 // defaults to 20\n    // });\n\n    map.locate({ setView: true, maxZoom: 19, watch: true });\n\n  }\n\n  playGame = () => {\n    // playersRefUnsubscribe() // remove players ref listener\n\n    db.collection('matches').doc(this.props.matchId)\n      .update({ initialising: true })\n      .catch(e => console.log(`Error initialising game. ${e}`))\n  }\n\n  handleSonar = () => {\n    // this.props.dispatch(getLocations())\n  }\n\n  render() {\n    const { admin, initialising, players, playing } = this.state\n    return (\n      <Box align=\"center\" >\n        <Box id=\"map\" style={{ height: \"480px\", width: \"100%\" }} >\n        </Box>\n        <Box width=\"medium\" align=\"center\" >\n          {\n            players && !initialising && <h3>{players.length} players in game</h3>\n          }\n        </Box>\n        {\n          admin && !initialising && <Button onClick={this.playGame} label=\"Play!\" primary />\n        }\n        {\n          initialising && 'show timer here 30 seconds'\n        }\n        {\n          playing && <Button primary style={{ padding: '0.8em' }} onClick={this.handleSonar}> send sonar </Button>\n        }\n      </Box>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  user\n})\n\nexport default connect(mapStateToProps)(InGame)\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport grommet from 'grommet/themes'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport SignUp from './Auth/SignUp'\nimport Login from './Auth/Login'\nimport Profile from './Profile'\nimport Lobby from './game/Lobby'\nimport InGame from './game/InGame'\n\nconst App: React.FC = () => {\n  return (\n    <Grommet theme={grommet}>\n      <Router>\n        <Switch>\n          <Route path=\"/signUp\" exact component={SignUp} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/profile\" exact component={Profile} />\n          <Route path=\"/lobby\" exact component={Lobby} />\n          <Route path=\"/game/:matchId\" exact render={routeProps =>\n            <InGame matchId={routeProps.match.params.matchId}/>\n          } />\n        </Switch>\n      </Router>\n    </Grommet>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n})\n\nserviceWorker.unregister();\n"],"sourceRoot":""}